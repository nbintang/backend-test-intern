generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Merchant {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String
  fullName    String   @map("full_name")
  phoneNumber String?  @map("phone_number")
  address     String?
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  // Relasi
  products Product[]
  orders   Order[]

  @@map("merchants")
}

model Product {
  id          Int      @id @default(autoincrement())
  name        String
  description String?
  price       Float
  stock       Int      @default(0)
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")
  merchant    Merchant @relation(fields: [merchantId], references: [id])
  merchantId  Int      @map("merchant_id")
  category    Category @relation(fields: [categoryId], references: [id])
  categoryId  Int      @map("category_id")
  orders      Order[]

  @@map("products")
}

model Category {
  id        Int       @id @default(autoincrement())
  name      String    @unique
  createdAt DateTime  @default(now()) @map("created_at")
  updatedAt DateTime  @updatedAt @map("updated_at")
  products  Product[]

  @@map("categories")
}

model Order {
  id          Int         @id @default(autoincrement())
  quantity    Int         @default(1)
  totalAmount Float       @map("total_amount")
  status      OrderStatus @default(PENDING)
  createdAt   DateTime    @default(now()) @map("created_at")
  updatedAt   DateTime    @updatedAt @map("updated_at")
  merchant    Merchant    @relation(fields: [merchantId], references: [id])
  merchantId  Int         @map("merchant_id")

  product      Product @relation(fields: [productId], references: [id])
  productId    Int     @map("product_id")
  customerName String  @map("customer_name")

  @@map("orders")
}

enum OrderStatus {
  PENDING
  COMPLETED
  CANCELLED
}
